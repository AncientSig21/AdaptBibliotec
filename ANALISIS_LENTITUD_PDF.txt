# ANÁLISIS DE LENTITUD EN CARGA DE PDFs

## 🔍 POSIBLES CAUSAS IDENTIFICADAS:

### 1. **CONFIGURACIÓN DE react-pdf**
- **Problema**: Las opciones actuales están optimizadas para velocidad pero pueden causar problemas
- **Configuración actual**:
  ```javascript
  options={{
    cMapUrl: 'https://unpkg.com/pdfjs-dist@3.11.174/cmaps/',
    cMapPacked: true,
    standardFontDataUrl: 'https://unpkg.com/pdfjs-dist@3.11.174/standard_fonts/',
    disableFontFace: true,
    disableRange: true,
    disableStream: true,
  }}
  ```

### 2. **TAMAÑO DE PÁGINA INICIAL**
- **Problema**: El tamaño inicial es muy pequeño (400x300) y luego se ajusta
- **Código actual**:
  ```javascript
  const [pageSize, setPageSize] = useState<{ width: number; height: number }>({ width: 400, height: 300 });
  ```

### 3. **TIMEOUT MUY LARGO**
- **Problema**: 15 segundos es demasiado tiempo para esperar
- **Código actual**:
  ```javascript
  setTimeout(() => {
    if (loading) {
      setError('El PDF tardó demasiado en cargar...');
    }
  }, 15000); // 15 segundos
  ```

### 4. **RENDERIZADO DE CAPAS**
- **Problema**: Se están deshabilitando capas importantes
- **Código actual**:
  ```javascript
  renderTextLayer={false}
  renderAnnotationLayer={false}
  ```

### 5. **URLs DE SUPABASE STORAGE**
- **Problema**: Las URLs se construyen dinámicamente y pueden tener problemas de CORS
- **Código actual**:
  ```javascript
  fileUrl = `https://ueufprdedokleqlyooyq.supabase.co/storage/v1/object/public/${rawUrl}`;
  ```

## 🚀 SOLUCIONES PROPUESTAS:

### 1. **OPTIMIZAR CONFIGURACIÓN DE react-pdf**
```javascript
options={{
  cMapUrl: 'https://unpkg.com/pdfjs-dist@3.11.174/cmaps/',
  cMapPacked: true,
  standardFontDataUrl: 'https://unpkg.com/pdfjs-dist@3.11.174/standard_fonts/',
  disableFontFace: false, // Habilitar para mejor renderizado
  disableRange: false,    // Habilitar para streaming
  disableStream: false,   // Habilitar para mejor rendimiento
}}
```

### 2. **REDUCIR TIMEOUT**
```javascript
setTimeout(() => {
  if (loading) {
    setError('El PDF tardó demasiado en cargar...');
  }
}, 8000); // Reducir a 8 segundos
```

### 3. **MEJORAR TAMAÑO INICIAL**
```javascript
const [pageSize, setPageSize] = useState<{ width: number; height: number }>({ width: 500, height: 400 });
```

### 4. **HABILITAR CAPAS IMPORTANTES**
```javascript
renderTextLayer={true}  // Para selección de texto
renderAnnotationLayer={true}  // Para enlaces y anotaciones
```

### 5. **AGREGAR PRELOADING**
```javascript
// Preload PDF antes de mostrar
const [isPreloaded, setIsPreloaded] = useState(false);
```

### 6. **MEJORAR MANEJO DE ERRORES**
```javascript
const onDocumentLoadError = (error: Error) => {
  console.error('Error específico del PDF:', error);
  setError(`Error al cargar PDF: ${error.message}`);
  setLoading(false);
};
```

## 📊 MÉTRICAS A MONITOREAR:

1. **Tiempo de carga inicial**: Debería ser < 3 segundos
2. **Tiempo de renderizado**: Debería ser < 2 segundos
3. **Tamaño del archivo**: PDFs > 10MB pueden ser problemáticos
4. **Velocidad de red**: Conexiones lentas afectan significativamente

## 🔧 PRÓXIMOS PASOS:

1. Implementar las optimizaciones propuestas
2. Agregar métricas de rendimiento
3. Considerar lazy loading para PDFs grandes
4. Implementar cache local para PDFs frecuentemente accedidos
5. Agregar indicador de progreso más detallado 